---
name: 'build images'

on:
  push:
    branches:
      - multiarch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/powerwall-dashboard
          ### ${GITHUB_REPOSITORY#*/}
          VERSION=multiarch
          SHORTREF=${GITHUB_SHA::8}

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS_DOCKER="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF},${DOCKER_IMAGE}:latest"
          TAGS_QUAYIO="${{ secrets.REGISTRY_URI }}/${DOCKER_IMAGE}:${VERSION},${{ secrets.REGISTRY_URI }}/${DOCKER_IMAGE}:${SHORTREF},${{ secrets.REGISTRY_URI }}/${DOCKER_IMAGE}:latest"

          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          
          #if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          #  TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          #fi

          # Set output parameters.
          echo ::set-output name=tags_docker::${TAGS_DOCKER}
          echo ::set-output name=tags_quayio::${TAGS_QUAYIO}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Quay
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ROBOTACCT }}
          password: ${{ secrets.QUAY_ROBOTPASS }}


      - name: Build and publish to DockerHub and Quay
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.prep.outputs.tags_docker }}
            ${{ steps.prep.outputs.tags_quayio }}
